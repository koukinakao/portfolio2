<%= form_with(model: @volume, local: true ) do |f| %>

  <%= f.hidden_field :id, :value => @volume.book_id %>

  <%= f.label :title %>
  <%= f.text_field :title, class: "form-control" %>
  
  <%= f.label :content %>
  <%= f.text_area :content, size: "20x10", maxlength: "350", class: "form-control" %>
  <br>
  
  <%= f.fields_for :pictures do |pi| %>
    <div class= "volume-iamge">
      <%= f.hidden_field :volume_id, :value => @volume.id %>
      <%= pi.hidden_field :id %><br>
      <div class= "image-vo"><%= image_tag pi.object.picture.url unless pi.object.picture.blank? %></div>
      <div class= "image-vo-con">
        <% if pi.object.picture.blank? %>
          <br><br><div class= "image-new-wo">画像を追加する</div>
        <% end %>
        <%= pi.file_field :picture, class: "image", multiple: true, accept: 'image/jpeg,image/gif,image/png' %>
        <% unless pi.object.picture.blank? %>
          <%= pi.check_box :remove_picture %>画像を削除する<br>
        <% end %>
      </div>
    </div>
  <% end %>
  <div class= "volume-iamge-prev">
    <div id="picture_prev", class= "image-vo" ></div><br>
  </div>
  
  <div class= "submit-button">
    <%= f.submit yield(:button_text), class: "btn btn-primary" %>
  </div>
  
<% end %>

<script type="text/javascript">
  $('#micropost_picture').bind('change', function() {
    var size_in_megabytes = this.files[0].size/1024/1024;
    if (size_in_megabytes > 5) {
      alert('Maximum file size is 5MB. Please choose a smaller file.');
    }
  });
  
  $(document).ready(function() {

     if(window.File && window.FileList && window.FileReader) {
       console.log("動いた1")
       var result = $('.image').last().attr({'id': 'text', 'class': 'inputnew'});
       $('.image').removeAttr('multiple');
        $(document).on('change', 'input[type=file]', function (e) {
          var d = $(this).parent().prev().children('img');
          console.log(d)
            var files = e.target.files ,
            filesLength = files.length ;
            for (var i = 0; i < filesLength ; i++) {
                var f = files[i]
                var fileReader = new FileReader();
                fileReader.onload = (function(e) {
                    var file = e.target;
                  $(d).attr({'src': e.target.result, width: 200, height: 297});
               });
               fileReader.readAsDataURL(f);
           }
      });
      $('#text').on('change', function (e) {
            var files = e.target.files ,
            filesLength = files.length ;
            for (var i = 0; i < filesLength ; i++) {
                var f = files[i]
                var fileReader = new FileReader();
                $('#picture_prev').empty();
                fileReader.onload = (function(e) {
                    var file = e.target;
                    $('#picture_prev')
                      .append("<br>")
                      .append("<br>")
                      .append($("<img/>").attr({'src': e.target.result, width: 200, height: 297}))
               });
               fileReader.readAsDataURL(f);
           }
      });
     } else { alert("Your browser doesn't support to File API")
     }
    });
</script>